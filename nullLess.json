[
  {
    "id": "1371",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is doing maintenance on an application hosted on AWS Elastic Beanstalk. The new version of the software is incompatible with the previous version. To properly deploy the update, a complete cutover to the new, updated version must be conducted on all instances simultaneously, with the option to roll back modifications in the event of a new version deployment failure. How can this be accomplished with the MINIMUM amount of downtime possible?",
      "answers": [
        "Use the Elastic Beanstalk All at once deployment policy to update all instances simultaneously.",
        "Perform an Elastic Beanstalk Rolling with additional batch deployment.",
        "Deploy the new version in a new Elastic Beanstalk environment and swap environment URLs.",
        "Perform an Elastic Beanstalk Rolling deployment."
      ],
      "correctAnswer": ["Deploy the new version in a new Elastic Beanstalk environment and swap environment URLs."]
    }
  },
  {
    "id": "1372",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "It takes 40 seconds for an application to process instructions received through Amazon SQS message. Assuming the SQS queue is set with the default VisibilityTimeout value, what is the BEST approach to guarantee that no other instances may obtain a message that has already been handled or is still being processed after it is received?",
      "answers": [
        "Use the ChangeMessageVisibility API to increase the VisibilityTimeout, then use the DeleteMessage API to delete the message.",
        "Use the DeleteMessage API call to delete the message from the queue, then call DeleteQueue API to remove the queue.",
        "Use the ChangeMessageVisibility API to decrease the timeout value, then use the DeleteMessage API to delete the message.",
        "Use the DeleteMessageVisibility API to cancel the VisibilityTimeout, then use the DeleteMessage API to delete the message."
      ],
      "correctAnswer": ["Use the ChangeMessageVisibility API to increase the VisibilityTimeout, then use the DeleteMessage API to delete the message."]
    }
  },
  {
    "id": "1373",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer constructed a Lambda function for the backend of a web application. When the Lambda function is tested using the AWS Lambda interface, the developer can see that it is being performed, but no log data is created in Amazon CloudWatch Logs, even after several minutes. What may have resulted in this situation?",
      "answers": [
        "The Lambda function does not have any explicit log statements for the log data to send it to CloudWatch Logs.",
        "The Lambda function is missing CloudWatch Logs as a source trigger to send log data.",
        "The execution role for the Lambda function is missing permissions to write log data to the CloudWatch Logs.",
        "The Lambda function is missing a target CloudWatch Log group."
      ],
      "correctAnswer": ["The execution role for the Lambda function is missing permissions to write log data to the CloudWatch Logs."]
    }
  },
  {
    "id": "1374",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "An application will consume data at a rapid rate from a variety of sources and must store it in an Amazon S3 bucket. Which service would be the most effective in accomplishing this task?",
      "answers": [
        "Amazon Kinesis Firehose",
        "Amazon S3 Acceleration Transfer",
        "Amazon SQS",
        "Amazon SNS"
      ],
      "correctAnswer": ["Amazon Kinesis Firehose"]
    }
  },
  {
    "id": "1375",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business is building an application that will be accessible through the Amazon API Gateways REST API. Only registered users should be able to access specific API resources. The token in use should expire automatically and should be updated on a regular basis. How can a developer adhere to these specifications?",
      "answers": [
        "Create an Amazon Cognito identity pool, configure the Amazon Cognito Authorizer in API Gateway, and use the temporary credentials generated by the identity pool.",
        "Create and maintain a database record for each user with a corresponding token and use an AWS Lambda authorizer in API Gateway.",
        "Create an Amazon Cognito user pool, configure the Cognito Authorizer in API Gateway, and use the identity or access token.",
        "Create an IAM user for each API user, attach an invoke permissions policy to the API, and use an IAM authorizer in API Gateway."
      ],
      "correctAnswer": ["Create an Amazon Cognito user pool, configure the Cognito Authorizer in API Gateway, and use the identity or access token."]
    }
  },
  {
    "id": "1376",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer uses the AWS CLI to create a role in order to get a set of temporary security credentials. Which of the following environment variables or AWS configuration file must be specified in order to authenticate with AWS?",
      "answers": [
        "AccessKeyId SecretAccessKey, and AssumedRoleId",
        "UserId, SessionToken, and AssumedRoleId",
        "AccessKeyId, SecretAccessKey, and SessionToken",
        "UserId, SessionToken and Credentials"
      ],
      "correctAnswer": ["AccessKeyId, SecretAccessKey, and SessionToken"]
    }
  },
  {
    "id": "1377",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 2",
      "question": "{FailedRecordCount:1, Records:[SequenceNumber:876345876345687, ShardId:shardId-000000000001}, {ErrorCode:ProvisionedThroughputExceededException, ErrorMessage:Rate exceeded for shard shardId-000000000001 in stream exampleStream under account 123456789.}, {SequenceNumber:43897957834643890, ShardId:shardId-000000000002} ] }  Which approaches will aid in mitigating this circumstance? (Select two.)",
      "answers": [
        "Implement retries with exponential backoff",
        "Use a PutRecord API instead of PutRecords",
        "Reduce the frequency and/or size of the requests",
        "Use Amazon SNS instead of Kinesis",
        "Reduce the number of KCL consumers"
      ],
      "correctAnswer": ["Implement retries with exponential backoff", "Reduce the frequency and/or size of the requests"]
    }
  },
  {
    "id": "1378",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 2",
      "question": "A developer is developing a web application that makes use of Amazon API Gateway to expose an AWS Lambda function for the purpose of processing client requests. The developer detects that the API Gateway times out during testing, despite the fact that the Lambda function completes inside the specified time limit. Which of the following Amazon CloudWatch API Gateway metrics may assist the developer in troubleshooting the issue? (Select two.)",
      "answers": [
        "CacheHitCount",
        "IntegrationLatency",
        "CacheMissCount",
        "Latency",
        "Count"
      ],
      "correctAnswer": ["IntegrationLatency", "Latency"]
    }
  },
  {
    "id": "1379",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "An on-premises e-commerce web application with shared session information is being transferred to AWS. The program must be fault resilient and inherently highly scalable, with any service interruptions having little impact on the user experience. What is the optimal method for storing session state?",
      "answers": [
        "Store the session state in Amazon ElastiCache",
        "Store the session state in Amazon CloudFront",
        "Store the session state in Amazon S3",
        "Enable session stickiness using elastic load balancers"
      ],
      "correctAnswer": ["Store the session state in Amazon ElastiCache"]
    }
  },
  {
    "id": "1380",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business is maintaining an on-premises NoSQL database to host a vital component of an application that is experiencing scalability challenges. The organization wishes to move the application to Amazon DynamoDB, taking into account the following factors: -Optimize frequent queries -Reduce read latencies -Plan for frequent queries on certain key attributes of the table. Which method would assist in accomplishing these goals?",
      "answers": [
        "Create global secondary indexes on keys that are frequently queried. Add the necessary attributes into the indexes.",
        "Create local secondary indexes on keys that are frequently queried. DynamoDB will fetch needed attributes from the table.",
        "Create DynamoDB global tables to speed up query responses. Use a scan to fetch data from the table.",
        "Create an AWS Auto Scaling policy for the DynamoDB table."
      ],
      "correctAnswer": ["Create global secondary indexes on keys that are frequently queried. Add the necessary attributes into the indexes."]
    }
  },
  {
    "id": "1381",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is creating a fault-tolerant environment that will store client sessions. How can the developer assure that no sessions are lost in the event of a failure of an Amazon EC2 instance?",
      "answers": [
        "Use sticky sessions with an Elastic Load Balancer target group.",
        "Use Amazon SQS to save session data.",
        "Use Amazon DynamoDB to perform scalable session handling.",
        "Use Elastic Load Balancer connection draining to stop sending requests to failing instances."
      ],
      "correctAnswer": ["Use Amazon DynamoDB to perform scalable session handling."]
    }
  },
  {
    "id": "1382",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "Locally, a developer tested an application before deploying it to AWS Lambda. While remote testing the application, the Lambda function returns an access denied error. How can this problem be resolved?",
      "answers": [
        "Update the Lambda functions execution role to include the missing permissions.",
        "Update the Lambda functions resource policy to include the missing permissions.",
        "Include an IAM policy document at the root of the deployment package and redeploy the Lambda function.",
        "Redeploy the Lambda function using an account with access to the AdministratorAccess policy."
      ],
      "correctAnswer": ["Update the Lambda functions execution role to include the missing permissions."]
    }
  },
  {
    "id": "1383",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing an applications authentication and authorisation mechanisms. The developer must take care that user credentials are never made public. How should the developer tackle this requirement?",
      "answers": [
        "Store the user credentials in Amazon DynamoDB. Build an AWS Lambda function to validate the credentials and authorize users.",
        "Deploy a custom authentication and authorization API on an Amazon EC2 instance. Store the user credentials in Amazon S3 and encrypt the credentials using Amazon S3 server-side encryption.",
        "Use Amazon Cognito to configure a user pool, and user the Cognito API to authenticate and authorize the user.",
        "Store the user credentials in Amazon RDS. Enable the encryption option for the Amazon RDS DB instances. Build an API using AWS Lambda to validate the credentials and authorize users."
      ],
      "correctAnswer": ["Use Amazon Cognito to configure a user pool, and user the Cognito API to authenticate and authorize the user."]
    }
  },
  {
    "id": "1384",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer wishes to operate a PHP website in conjunction with an NGINX proxy and bundle them together as Docker containers in a single environment. The developer need a managed environment that is fully automated in terms of provisioning and load balancing. The developer has little control over the setup and must keep operating overhead to a minimum. How should the developer structure the website to adhere to these specifications?",
      "answers": [
        "Create a new application in AWS Elastic Beanstalk that is preconfigured for a multicontainer Docker environment. Upload the code, and deploy it to a web server environment.",
        "Deploy the code on Amazon EC2 instances in an Auto Scaling group behind an Application Load Balancer.",
        "Construct an AWS Cloud Formation template that launches Amazon EC2 instances. Install and configure the PHP code by using cfn helper scripts.",
        "Upload the code for the PHP website into an Amazon S3 bucket. Host the website from the S3 bucket."
      ],
      "correctAnswer": ["Create a new application in AWS Elastic Beanstalk that is preconfigured for a multicontainer Docker environment. Upload the code, and deploy it to a web server environment."]
    }
  },
  {
    "id": "1385",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is constructing a template that will be used to deploy an application through AWS CloudFormation. This is a serverless application that makes use of Amazon API Gateway, Amazon DynamoDB, and AWS Lambda. Which tool should the developer use to create simpler syntax for serverless resource expressions?",
      "answers": [
        "CloudFormation serverless intrinsic functions",
        "AWS serverless express",
        "An AWS serverless application model",
        "A CloudFormation serverless plugin"
      ],
      "correctAnswer": ["An AWS serverless application model"]
    }
  },
  {
    "id": "1386",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business maintains an AWS CloudFormation template in the form of a single file. The template is capable of launching and establishing a whole infrastructure stack. Which best practice would improve the templates maintainability?",
      "answers": [
        "Use nested stacks for common template patterns.",
        "Embed credentials to prevent typos.",
        "Remove mappings to decrease the number of variables.",
        "Use AWS::Include to reference publicly-hosted template files."
      ],
      "correctAnswer": ["Use nested stacks for common template patterns."]
    }
  },
  {
    "id": "1387",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer must provide non-logged-in guest users access to an Amazon Cognito-enabled site in order to read files stored in an Amazon S3 bucket. How is the Developer to comply with these requirements?",
      "answers": [
        "Create a blank user ID in a user pool, add to the user group, and grant access to AWS resources.",
        "Create a new identity pool, enable access to authenticated identities, and grant access to AWS resources.",
        "Create a new user pool, enable access to authenticated identifies, and grant access to AWS resources.",
        "Create a new user pool, disable authentication access, and grant access to AWS resources."
      ],
      "correctAnswer": ["Create a new identity pool, enable access to authenticated identities, and grant access to AWS resources."]
    }
  },
  {
    "id": "1388",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer want to use Amazon EC2 Auto Scaling in order to scale a web application. The developer want to avoid session loss during scale-in events. How can the developer preserve and share the session state across several EC2 instances?",
      "answers": [
        "Write the sessions to an Amazon Elastic Block Store (Amazon EBS) volume. Mount the EBS volume to each EC2 instance in the group.",
        "Store the sessions in an Amazon ElastiCache for Memcached cluster. Configure the application to use the Memcached API.",
        "Publish the sessions to an Amazon Simple Notification Service (Amazon SNS) topic. Subscribe each EC2 instance in the group to the topic.",
        "Write the sessions to an Amazon Redshift cluster. Configure the application to use the Amazon Redshift API."
      ],
      "correctAnswer": ["Store the sessions in an Amazon ElastiCache for Memcached cluster. Configure the application to use the Memcached API."]
    }
  },
  {
    "id": "1389",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "On AWS, a developer is developing a new sophisticated application. The application is composed of a number of microservices that are hosted on Amazon EC2. The developer want to ascertain which microservice incurs the most amount of delay while processing a request. Which technique should the developer use to determine this?",
      "answers": [
        "Instrument each microservice request using the AWS X-Ray SDK. Examine the annotations associated with the requests.",
        "Instrument each microservice request using the AWS X-Ray SDK. Examine the subsegments associated with the requests.",
        "Instrument each microservice request using the AWS X-Ray SDK. Examine the Amazon CloudWatch EC2 instance metrics associated with the requests.",
        "Instrument each microservice request using the Amazon CloudWatch SDK. Examine the CloudWatch EC2 instance metrics associated with the requests."
      ],
      "correctAnswer": ["Instrument each microservice request using the AWS X-Ray SDK. Examine the subsegments associated with the requests."]
    }
  },
  {
    "id": "1390",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "An application must encrypt data that is written to Amazon S3, where the keys are controlled in-house and S3 handles the encryption. Which encryption method should be used?",
      "answers": [
        "Use server-side encryption with Amazon S3-managed keys",
        "Use server-side encryption with AWS KMS-managed keys",
        "Use client-side encryption with customer master keys",
        "Use server-side encryption with customer-provided keys"
      ],
      "correctAnswer": ["Use server-side encryption with customer-provided keys"]
    }
  },
  {
    "id": "1391",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer must handle AWS infrastructure as code and be able to deploy multiple identical copies, stage changes, and roll back to prior versions. Which technique satisfies these criteria?",
      "answers": [
        "Use cost allocation reports and AWS OpsWorks to deploy and manage the infrastructure.",
        "Use Amazon CloudWatch metrics and alerts along with resource tagging to deploy and manage the infrastructure.",
        "Use AWS Elastic Beanstalk and AWS CodeCommit to deploy and manage the infrastructure.",
        "Use AWS CloudFormation and AWS CodeCommit to deploy and manage the infrastructure."
      ],
      "correctAnswer": ["Use AWS CloudFormation and AWS CodeCommit to deploy and manage the infrastructure."]
    }
  },
  {
    "id": "1392",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer has created a multi-threaded application that runs on an Amazon EC2 instance fleet. The operations team has requested a graphical tool for tracking the number of threads that are currently operating over time. What is the MOST EFFECTIVE method of completing this request?",
      "answers": [
        "Periodically send the thread count to AWS X-Ray segments, then generate a service graph on demand.",
        "Create a custom Amazon CloudWatch metric and periodically perform a PutMetricData call with the current thread count.",
        "Periodically log thread count data to Amazon S3. Use Amazon Kinesis to process the data into a graph.",
        "Periodically write the current thread count to a table using Amazon DynamoDB and use Amazon CloudFront to create a graph."
      ],
      "correctAnswer": ["Create a custom Amazon CloudWatch metric and periodically perform a PutMetricData call with the current thread count."]
    }
  },
  {
    "id": "1393",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A deployment package utilizes the AWS CLI to put files into any S3 bucket in the account, using environment variables to keep access keys. The package is operating on Amazon EC2 instances that have been updated to run with an assumed IAM role and a more restricted policy that restricts access to a single bucket. Following the update, the Developer login into the host and retains the ability to write to all of the accounts S3 buckets. What is the MOST LIKELY REASON for this occurrence?",
      "answers": [
        "An IAM inline policy is being used on the IAM role",
        "An IAM managed policy is being used on the IAM role",
        "The AWS CLI is corrupt and needs to be reinstalled",
        "The AWS credential provider looks for instance profile credentials last"
      ],
      "correctAnswer": ["The AWS credential provider looks for instance profile credentials last"]
    }
  },
  {
    "id": "1394",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is tasked with the task of developing a mobile application on a shoestring budget. The solution needs a scalable service that enables clients to register and authenticate for the mobile application utilizing the organizations existing SAML 2.0 identity provider. Which Amazon Web Services (AWS) offering should be utilized to fulfill these requirements?",
      "answers": [
        "AWS Lambda",
        "Amazon Cognito",
        "AWS IAM",
        "Amazon EC2"
      ],
      "correctAnswer": ["Amazon Cognito"]
    }
  },
  {
    "id": "1395",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing an AWS Lambda function that generates temporary files smaller than 10 MB in size during operation. Throughout execution, the temporary files will be viewed and updated several times. There is no need for the Developer to store or retrieve these files in the future. What directory should the temporary file be saved to?",
      "answers": [
        "the /tmp directory",
        "Amazon EFS",
        "Amazon EBS",
        "Amazon S3"
      ],
      "correctAnswer": ["the /tmp directory"]
    }
  },
  {
    "id": "1396",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business requires a new REST API that can deliver data on the contents of an Amazon S3 bucket, such as the number of items stored inside. The organization has opted to build the new API as a microservice and to use AWS Lambda and Amazon API Gateway. How could the developer verify that the microservice gets access to the required Amazon S3 bucket while keeping to security best practices?",
      "answers": [
        "Create an IAM user that has permissions to access the Amazon S3 bucket, and store the IAM user credentials in the Lambda function source code.",
        "Create an IAM role that has permissions to access the Amazon S3 bucket and assign it to the Lambda function as its execution role.",
        "Create an Amazon S3 bucket policy that specifies the Lambda service as its principal and assign it to the Amazon S3 bucket.",
        "Create an IAM role, attach the AmazonS3FullAccess managed policy to it, and assign the role to the Lambda function as its execution role."
      ],
      "correctAnswer": ["Create an IAM role that has permissions to access the Amazon S3 bucket and assign it to the Lambda function as its execution role."]
    }
  },
  {
    "id": "1397",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing a mobile application that will operate without requiring users to log in. Which approach is the MOST EFFECTIVE for granting people access to AWS resources?",
      "answers": [
        "Use an identity provider to securely authenticate with the application.",
        "Create an AWS Lambda function to create an IAM user when a user accesses the application.",
        "Create credentials using AWS KMS and apply these credentials to users when using the application.",
        "Use Amazon Cognito to associate unauthenticated users with an IAM role that has limited access to resources."
      ],
      "correctAnswer": ["Use Amazon Cognito to associate unauthenticated users with an IAM role that has limited access to resources."]
    }
  },
  {
    "id": "1398",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer has built an S3 bucket called s3:/mycoolapp and configured server-wide logging with a path of s3:/mycoolapp/logs. The developer copied 100 KB of Cascading Style Sheets (CSS) files to the subdirectory s3:/mycoolapp/css and then ceased work. When the developer returned a few days later, the bucket had grown to 50 GB in size. What is the MOST LIKELY REASON for this occurrence?",
      "answers": [
        "The CSS files were not compressed and S3 versioning was enabled.",
        "S3 replication was enabled on the bucket.",
        "Logging into the same bucket caused exponential log growth.",
        "An S3 lifecycle policy has moved the entire CSS file to S3 Infrequent Access."
      ],
      "correctAnswer": ["Logging into the same bucket caused exponential log growth."]
    }
  },
  {
    "id": "1399",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing a new application that will be accessible to users through an Amazon API Gateway-created API. The users must be validated using the Security Assertion Markup Language (SAML) by a third-party identity provider. After users have been validated, they will need access to further AWS services, such as Amazon S3 and Amazon DynamoDB. How are these stipulations to be met?",
      "answers": [
        "Use an Amazon Cognito user pool with SAML as the resource server.",
        "Use Amazon Cognito identity pools with a SAML identity provider as one of the authentication providers.",
        "Use the AWS IAM service to provide the sign-up and sign-in functionality.",
        "Use Amazon CloudFront signed URLs to connect with the SAML identity provider."
      ],
      "correctAnswer": ["Use Amazon Cognito identity pools with a SAML identity provider as one of the authentication providers."]
    }
  },
  {
    "id": "1400",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 2",
      "question": "A business is in the process of building a new web application in Python. The application must be deployed using AWS Elastic Beanstalk via the AWS Management Console. The developer produces an Elastic Beanstalk source bundle, which he or she then uploads through the console. Which of the following are prerequisites for developing the source bundle? (Select two.)",
      "answers": [
        "The source bundle must include the ebextensions.yaml file",
        "The source bundle must not include a top-level directory",
        "The source bundle must be compressed with any required dependencies in a top-level parent folder",
        "The source bundle must be created as a single .zip or .war file",
        "The source bundle must be uploaded into Amazon EFS"
      ],
      "correctAnswer": ["The source bundle must not include a top-level directory", "The source bundle must be created as a single .zip or .war file"]
    }
  },
  {
    "id": "1401",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is conducting an investigation on behalf of a business. Certain queries transit via an Amazon API Gateway endpoint but never reach the AWS Lambda function that supports the endpoint. The developer discovers that a second Lambda function sometimes exceeds the maximum concurrency limit for the AWS account. How can the developer resolve this situation?",
      "answers": [
        "Manually reduce the concurrent quota at the account level.",
        "Add another API Gateway stage for the endpoint. Shard the requests.",
        "Request to increase the Lambda concurrency quota through the Service Quotas dashboard.",
        "Reduce the throttling quota in the API Gateway endpoint."
      ],
      "correctAnswer": ["Request to increase the Lambda concurrency quota through the Service Quotas dashboard."]
    }
  },
  {
    "id": "1402",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is building a serverless website containing HTML files, photos, videos, and JavaScript content (client-side scripts). Which service combination should the Developer utilize to build the website?",
      "answers": [
        "Amazon S3 and Amazon CloudFront",
        "Amazon EC2 and Amazon ElastiCache",
        "Amazon ECS and Redis",
        "AWS Lambda and Amazon API Gateway"
      ],
      "correctAnswer": ["Amazon S3 and Amazon CloudFront"]
    }
  },
  {
    "id": "1403",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "The upload to Amazon S3 of a 15 GB item fails. The error message reads as follows: Your proposed upload exceeds the maximum allowed object size. How will the Developer submit this object?",
      "answers": [
        "Upload the object using the multi-part upload API.",
        "Upload the object over an AWS Direct Connect connection.",
        "Contact AWS Support to increase the object size limit.",
        "Upload the object to another AWS region."
      ],
      "correctAnswer": ["Upload the object using the multi-part upload API."]
    }
  },
  {
    "id": "1404",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing AWS CloudFormation templates to handle the deployment of an application in Amazon Elastic Container Service (Amazon ECS) using AWS CodeDeploy. The developer want to automatically deploy updated versions of the program to a subset of users prior to making the new version generally accessible. How should the developer handle the new versions deployment?",
      "answers": [
        "Modify the CloudFormation template to include a Transform section and the AWS::CodeDeploy::BlueGreen hook.",
        "Deploy the new version in a new CloudFormation stack. After testing is complete, update the applications DNS records for the new stack.",
        "Run CloudFormation stack updates on the application stack to deploy new application versions when they are available.",
        "Create a nested stack for the new version. Include a Transform section and the AWS::CodeDeploy::BlueGreen hook."
      ],
      "correctAnswer": ["Modify the CloudFormation template to include a Transform section and the AWS::CodeDeploy::BlueGreen hook."]
    }
  },
  {
    "id": "1405",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 2",
      "question": "A developer wants to upload data to Amazon S3 and wishes to encrypt the data during the upload process. Which of the following solutions is the most appropriate for our task? (Select two.)",
      "answers": [
        "Set up hardware VPN tunnels to a VPC and access S3 through a VPC endpoint",
        "Set up Client-Side Encryption with an AWS KMS-Managed Customer Master Key",
        "Set up Server-Side Encryption with AWS KMS-Managed Keys",
        "Transfer the data over an SSL connection",
        "Set up Server-Side Encryption with S3-Managed Keys"
      ],
      "correctAnswer": ["Set up Client-Side Encryption with an AWS KMS-Managed Customer Master Key", "Transfer the data over an SSL connection"]
    }
  },
  {
    "id": "1406",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "Where should the appspec.yml file be stored for AWS CodeDeploy to function properly?",
      "answers": [
        "In the root of the application source code directory structure",
        "In the bin folder along with all the complied code",
        "In an S3 bucket",
        "In the same folder as the application configuration files"
      ],
      "correctAnswer": ["In the root of the application source code directory structure"]
    }
  },
  {
    "id": "1407",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing a serverless web application and managing many development branches. The developer want to avoid having to update the Amazon API Gateway target endpoint with each new code push. Which solution would enable the developer to efficiently submit code without having to update the API Gateway?",
      "answers": [
        "Associate different AWS Lambda functions to an API Gateway target endpoint.",
        "Create different stages in API Gateway, then associate API Gateway with AWS Lambda.",
        "Create aliases and versions in AWS Lambda.",
        "Tag the AWS Lambda functions with different names."
      ],
      "correctAnswer": ["Create aliases and versions in AWS Lambda."]
    }
  },
  {
    "id": "1408",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "AWS Lambda produces a 3MB JSON file on a daily basis and then uploads it to an Amazon S3 bucket. Because the file includes sensitive information, the Developer must encrypt it before to uploading it to the bucket. Which of the following should the Developer change to guarantee that the data is encrypted before being uploaded to the bucket?",
      "answers": [
        "Use the default AWS KMS customer master key for S3 in the Lambda function code.",
        "Use the S3 managed key and call the GenerateDataKey API to encrypt the file.",
        "Use the GenerateDateKey API, then use that data key to encrypt the file in the Lambda function code.",
        "Use a custom KMS customer master key created for S3 in the Lambda function code."
      ],
      "correctAnswer": ["Use the GenerateDateKey API, then use that data key to encrypt the file in the Lambda function code."]
    }
  },
  {
    "id": "1409",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing an application that requires identifying the public IPv4 address of the Amazon EC2 instance on which it is running. How is the program going to find this data?",
      "answers": [
        "Get the instance metadata by retrieving http://169.254.169.254/latest/metadata/.",
        "Get the instance user data by retrieving http://169.254.169.254/latest/userdata/.",
        "Get the application to run IFCONFIG to get the public IP address.",
        "Get the application to run IPCONFIG to get the public IP address."
      ],
      "correctAnswer": ["Get the instance metadata by retrieving http://169.254.169.254/latest/metadata/."]
    }
  },
  {
    "id": "1410",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer want to automatically create a record in an Amazon DynamoDB table whenever a new file is uploaded to an Amazon S3 bucket. Which sequence of actions would be required to accomplish this?",
      "answers": [
        "Create an event with Amazon CloudWatch Events that will monitor the S3 bucket and then insert the records into DynamoDB.",
        "Configure an S3 event to invoke a Lambda function that inserts records into DynamoDB.",
        "Create a Lambda function that will poll the S3 bucket and then insert the records into DynamoDB.",
        "Create a cron job that will run at a scheduled time and insert the records into DynamoDB."
      ],
      "correctAnswer": ["Configure an S3 event to invoke a Lambda function that inserts records into DynamoDB."]
    }
  }
]