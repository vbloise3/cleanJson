[
  {
    "id": "1153",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is automating the deployment of a new application using AWS Serverless Application Model (AWS SAM). One AWS Lambda function and one Amazon S3 bucket are included in the new application. The Lambda function must have read-only access to the S3 bucket. How should the developer setup AWS SAM to provide the S3 bucket the appropriate read permissions?",
      "answers": [
        "Reference a second Lambda authorizer function.",
        "Add a custom S3 bucket policy to the Lambda function.",
        "Create an Amazon Simple Queue Service (SQS) topic for only S3 object reads. Reference the topic in the template.",
        "Add the S3ReadPolicy template to the Lambda function's execution role."
      ],
      "correctAnswer": ["Add the S3ReadPolicy template to the Lambda function's execution role."]
    }
  },
  {
    "id": "1154",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer must use AWS KMS to encrypt a 100 GB object. What is the BEST course of action?",
      "answers": [
        "Make an Encrypt API call to encrypt the plaintext data as ciphertext using a customer master key (CMK)",
        "Make an Encrypt API call to encrypt the plaintext data as ciphertext using a customer master key (CMK) with imported key material",
        "Make a GenerateDataKey API call that returns a plaintext key and an encrypted copy of a data key. Use a plaintext key to encrypt the data",
        "Make a GenerateDataKeyWithoutPlaintext API call that returns an encrypted copy of a data key. Use an encrypted key to encrypt the data"
      ],
      "correctAnswer": ["Make a GenerateDataKey API call that returns a plaintext key and an encrypted copy of a data key. Use a plaintext key to encrypt the data"]
    }
  },
  {
    "id": "1155",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A real-time application processes millions of events that are received over an API. Which service might be utilized to enable concurrent processing of data by several users in the most cost-effective manner possible?",
      "answers": [
        "Amazon SNS with fanout to an SQS queue for each application",
        "Amazon SNS with fanout to an SQS FIFO (first-in, first-out) queue for each application",
        "Amazon Kinesis Firehose",
        "Amazon Kinesis Streams"
      ],
      "correctAnswer": ["Amazon Kinesis Streams"]
    }
  },
  {
    "id": "1156",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer has created a serverless application that makes use of a variety of AWS services. The business logic is implemented using Lambda functions that rely on third-party libraries. Amazon API Gateway will be used to provide the Lambda function endpoints. The Lambda function will be used to store the data in Amazon DynamoDB. Although the developer is prepared to launch the program, he or she must have the ability to turn back. How, given these criteria, can this deployment be automated?",
      "answers": [
        "Deploy using Amazon Lambda API operations to create the Lambda function by providing a deployment package.",
        "Use an AWS CloudFormation template and use CloudFormation syntax to define the Lambda function resource in the template.",
        "Use syntax conforming to the Serverless Application Model in the AWS CloudFormation template to define the Lambda function resource.",
        "Create a bash script which uses AWS CLI to package and deploy the application."
      ],
      "correctAnswer": ["Use syntax conforming to the Serverless Application Model in the AWS CloudFormation template to define the Lambda function resource."]
    }
  },
  {
    "id": "1157",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A firm is developing an application that will use an Amazon DynamoDB database to monitor athlete performance. A partition key (user id) and a sort key (sport name) uniquely identify each item in the database. The following illustration depicts the table's design: Partition Key: user_id, Sort Key: sport_name, Attributes: score, score_date_time. (Please note that not all table characteristics are shown.) A developer is requested to create a leaderboard application that would show the best performers (user id) for each sport name depending on their score. Which approach will enable the developer to most effectively retrieve results from the DynamoDB table?",
      "answers": [
        "Use a DynamoDB query operation with the key attributes of user_id and sport_name and order the results based on the score attribute.",
        "Create a global secondary index with a partition key of sport_name and a sort key of score, and get the results",
        "Use a DynamoDB scan operation to retrieve scores and user_id based on sport_name, and order the results based on the score attribute.",
        "Create a local secondary index with a primary key of sport_name and a sort key of score and get the results based on the score attribute."
      ],
      "correctAnswer": ["Create a global secondary index with a partition key of sport_name and a sort key of score, and get the results"]
    }
  },
  {
    "id": "1158",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 2",
      "question": "On Amazon EC2 instances in a VPC, a corporation runs a standard three-tier application, including its NoSQL database. The business want to transition to Amazon DynamoDB. A developer observes during testing that the application running on the EC2 instances is unable to write data to the DynamoDB database. The developer must securely provide the application write access to the DynamoDB table. Which combination of acts satisfies these criteria? (Select two.)",
      "answers": [
        "Create a gateway VPC endpoint for DynamoDB. Specify the VPC ID in the --vpc-id parameter.",
        "Create an interface VPC endpoint for DynamoDB. Specify the VPC ID in the --vpc-id parameter.",
        "Create an IAM user that allows write access to the DynamoDB table. Add the user to the EC2 Instances.",
        "Create an IAM role that allows write access to the DynamoDB table. Add the role to the EC2 instances.",
        "Create an IAM group that allows write access to the DynamoDB table. Add the group to the EC2 instances."
      ],
      "correctAnswer": ["Create a gateway VPC endpoint for DynamoDB. Specify the VPC ID in the --vpc-id parameter.", "Create an IAM role that allows write access to the DynamoDB table. Add the role to the EC2 instances."]
    }
  },
  {
    "id": "1159",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is developing a serverless application that needs every ten minutes invocation of an AWS Lambda function. How can the function be triggered in an automated and serverless manner?",
      "answers": [
        "Deploy an Amazon EC2 instance based on Linux, and edit its /etc/crontab file by adding a command to periodically invoke the Lambda function.",
        "Configure an environment variable named PERIOD for the Lambda function. Set the value to 600.",
        "Create an IAM user that allows write access to the DynamoDB table. Add the user to the EC2 Instances.",
        "Create an Amazon SNS topic that has a subscription to the Lambda function with a 600-second timer."
      ],
      "correctAnswer": ["Create an IAM user that allows write access to the DynamoDB table. Add the user to the EC2 Instances."]
    }
  },
  {
    "id": "1160",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer has submitted an update to an application that is delivered through Amazon CloudFront to a worldwide user base. Users are not able to view the latest modifications once the application is deployed. How can the Developer address this concern?",
      "answers": [
        "Remove the origin from the CloudFront configuration and add it again.",
        "Disable forwarding of query strings and request headers from the CloudFront distribution configuration.",
        "Invalidate all the application objects from the edge caches.",
        "Disable the CloudFront distribution and enable it again to update all the edge locations."
      ],
      "correctAnswer": ["Invalidate all the application objects from the edge caches."]
    }
  },
  {
    "id": "1161",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "Images are stored in an S3 bucket by an application. Notifications from Amazon S3 are utilized to invoke a Lambda code that resizes the pictures. Each photograph is processed in less than a second. How will AWS Lambda deal with the increased traffic?",
      "answers": [
        "Lambda will scale out to execute the requests concurrently.",
        "Lambda will handle the requests sequentially in the order received.",
        "Lambda will process multiple images in a single execution.",
        "Lambda will add more compute to each execution to reduce processing time."
      ],
      "correctAnswer": ["Lambda will scale out to execute the requests concurrently."]
    }
  },
  {
    "id": "1162",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is doing a refactoring operation on a monolithic application. The program does many activities in response to a POST request. Some processes are carried out in concurrently, while others are carried out sequentially. These operations have been decoupled and repurposed as AWS Lambda functions. Amazon API Gateway will process the POST request. How should the developer launch the Lambda functions using API Gateway in the same order?",
      "answers": [
        "Use Amazon SQS to invoke the Lambda functions",
        "Use an AWS Step Functions activity to run the Lambda functions",
        "Use Amazon SNS to trigger the Lambda functions",
        "Use an AWS Step Functions state machine to orchestrate the Lambda functions"
      ],
      "correctAnswer": ["Use an AWS Step Functions state machine to orchestrate the Lambda functions"]
    }
  },
  {
    "id": "1163",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A retailers developer must include a fraud detection solution into the order processing system. Verification of an order by the fraud detection solution takes between ten and thirty minutes. At its height, the website can process up to 100 orders per minute. How can the fraud detection technology be integrated into the order processing pipeline in the most scalable manner?",
      "answers": [
        "Add all new orders to an Amazon SQS queue. Configure a fleet of 10 EC2 instances spanning multiple AZs with the fraud detection solution installed on them to pull orders from this queue. Update the order with a pass or fails status.",
        "Add all new orders to an SQS queue. Configure an Auto Scaling group that uses the queue depth metric as its unit of scale to launch a dynamically-sized fleet of EC2 instances spanning multiple AZs with the fraud detection solution installed on them to pull orders from this queue. Update the order with a pass or fails status.",
        "Add all new orders to an Amazon Kinesis Stream. Subscribe a Lambda function to automatically read batches of records from the Kinesis Stream. The Lambda function includes the fraud detection software and will update the order with a pass or fail status.",
        "Write all new orders to Amazon DynamoDB. Configure DynamoDB Streams to include all new orders. Subscribe a Lambda function to automatically read batches of records from the Kinesis Stream. The Lambda function includes the fraud detection software and will update the order with a pass or fail status."
      ],
      "correctAnswer": ["Add all new orders to an SQS queue. Configure an Auto Scaling group that uses the queue depth metric as its unit of scale to launch a dynamically-sized fleet of EC2 instances spanning multiple AZs with the fraud detection solution installed on them to pull orders from this queue. Update the order with a pass or fails status."]
    }
  },
  {
    "id": "1164",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is required to create an application that makes advantage of Amazon DynamoDB. The criteria include that the DynamoDB table's contents must be 7KB in size and that reads must be highly consistent. The read pace is limited to three items per second, whereas the write rate is limited to ten things per second. What size DynamoDB table should the developer create to satisfy these requirements?",
      "answers": [
        "Read: 3 read capacity units Write: 70 write capacity units",
        "Read: 6 read capacity units Write: 70 write capacity units",
        "Read: 6 read capacity units Write: 10 write capacity units",
        "Read: 3 read capacity units Write: 10 write capacity units"
      ],
      "correctAnswer": ["Read: 6 read capacity units Write: 70 write capacity units"]
    }
  },
  {
    "id": "1165",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business has a REST application made up of an Amazon API Gateway API and many AWS Lambda services. A developer is reacting to a warning that the HTTP response error rate for the API Gateway API has suddenly risen. The developer must rapidly discover which Lambda function is misbehaving. Which solution will satisfy these criteria?",
      "answers": [
        "Implement error handling in the functions to write error logs to the AWS X-Ray API. Use the X-Ray console to query the logs.",
        "Enable Amazon CloudWatch Logs and detailed CloudWatch metrics. Use CloudWatch Logs Insights to query the API Gateway logs.",
        "Download the API Gateway logs and Lambda invocation logs from Amazon S3. Perform a line-by-line search against them.",
        "Export the API Gateway logs and Lambda invocation logs from Amazon EventBridge (Amazon CloudWatch Events) and Amazon CloudWatch Logs. Perform a line-by-line search against them."
      ],
      "correctAnswer": ["Enable Amazon CloudWatch Logs and detailed CloudWatch metrics. Use CloudWatch Logs Insights to query the API Gateway logs."]
    }
  },
  {
    "id": "1166",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "An application becomes unresponsive due to the following error: The bucket given does not exist. Where IS THE BEST PLACE TO START THE ANALYSIS OF THE ROOT CAUSES?",
      "answers": [
        "Check the Elastic Load Balancer logs for DeleteBucket requests.",
        "Check the application logs in Amazon CloudWatch Logs for Amazon S3 DeleteBucket errors.",
        "Check AWS X-Ray for Amazon S3 DeleteBucket alarms.",
        "Check AWS CloudTrail for a DeleteBucket event."
      ],
      "correctAnswer": ["Check AWS CloudTrail for a DeleteBucket event."]
    }
  },
  {
    "id": "1167",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A developer is testing an application that asynchronously executes an AWS Lambda function. The Lambda function fails to process after two retries during the testing phase. How can the developer debug the error?",
      "answers": [
        "Configure AWS CloudTrail logging to investigate the invocation failures",
        "Configure Dead Letter Queues by sending events to Amazon SQS for investigation",
        "Configure Amazon Simple Workflow Service to process any direct unprocessed events",
        "Configure AWS Config to process any direct unprocessed events"
      ],
      "correctAnswer": ["Configure Dead Letter Queues by sending events to Amazon SQS for investigation"]
    }
  },
  {
    "id": "1168",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 2",
      "question": "A developer has an on-premises stateful web server that is being transferred to AWS. The developers flexibility in the new design must be increased. How should the developer approach refactoring the program to increase its elasticity? (Select two.)",
      "answers": [
        "Use pessimistic concurrency on Amazon DynamoDB",
        "Use Amazon CloudFront with an Auto Scaling group",
        "Use Amazon CloudFront with an AWS Web Application Firewall",
        "Store session state data in an Amazon DynamoDB table",
        "Use an ELB with an Auto Scaling group"
      ],
      "correctAnswer": ["Store session state data in an Amazon DynamoDB table", "Use an ELB with an Auto Scaling group"]
    }
  },
  {
    "id": "1169",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "Amazon API Gateway is being used by a media business to handle microservices configured as AWS Lambda functions. The development team of the corporation intends to release a new version of its API. To prevent impacting current customers when the new API is launched, the firm intends to provide all users a three-month grace period during which they may migrate from the old API to the new API. Which implementation technique should the business utilize to accomplish this objective?",
      "answers": [
        "Update the Lambda functions. Configure the API to use Lambda proxy integration.",
        "Update the Lambda functions. Provide the API client with the new Lambda endpoints.",
        "Use API Gateway to deploy a new stage that uses updated Lambda functions and provides users with a new URL.",
        "Use API Gateway to redirect requests based on a request header to updated Lambda functions. Configure a 90-day expiration on the old API."
      ],
      "correctAnswer": ["Use API Gateway to deploy a new stage that uses updated Lambda functions and provides users with a new URL."]
    }
  },
  {
    "id": "1170",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business wishes to establish continuous integration for its AWS workloads. The firm wishes to activate unit tests in its pipeline in response to updates to its code repository and to be alerted of pipeline failure events. How are these stipulations to be met?",
      "answers": [
        "Store the source code in AWS CodeCommit. Create a CodePipeline to automate unit testing. Use Amazon SNS to trigger notifications of failure events.",
        "Store the source code in GitHub. Create a CodePipeline to automate unit testing. Use Amazon SES to trigger notifications of failure events.",
        "Store the source code on GitHub. Create a CodePipeline to automate unit testing. Use Amazon CloudWatch to trigger notifications of failure events.",
        "Store the source code in AWS CodeCommit. Create a CodePipeline to automate unit testing. Use Amazon CloudWatch to trigger notification of failure events."
      ],
      "correctAnswer": ["Store the source code in AWS CodeCommit. Create a CodePipeline to automate unit testing. Use Amazon SNS to trigger notifications of failure events."]
    }
  },
  {
    "id": "1171",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A business is designing a report that will be performed through AWS Step Functions. Amazon CloudWatch detects issues in the Task State Machine for Step Functions. To debug each operation, the state input must be included in the state output, along with the error message. Which coding technique preserves both the original input and the state error?",
      "answers": [
        "Use ResultPath in a Catch statement to include the error with the original input.",
        "Use InputPath in a Catch statement and set the value to null.",
        "Use ErrorEquals in a Retry statement to include the error with the original input.",
        "Use OutputPath in a Retry statement and set the value to $."
      ],
      "correctAnswer": ["Use ResultPath in a Catch statement to include the error with the original input."]
    }
  },
  {
    "id": "1172",
    "category": "Cloud Concepts",
    "info": {
      "subcategory": "Test Example Questions",
      "questionType": "multiple choice 1",
      "question": "A company uses AWS CodePipeline to manage continuous integration/continuous delivery (CI/CD) pipelines for its application. Before staging artifacts for testing, a developer must create unit tests and execute them as part of the process. How should the developer implement unit tests into their continuous integration/continuous delivery pipelines?",
      "answers": [
        "Create a separate CodePipeline pipeline to run unit tests",
        "Update the AWS CodeBuild specification to include a phase for running unit tests",
        "Install the AWS CodeDeploy agent on an Amazon EC2 instance to run unit tests",
        "Create a testing branch in AWS CodeCommit to run unit tests"
      ],
      "correctAnswer": ["Update the AWS CodeBuild specification to include a phase for running unit tests"]
    }
  }
]